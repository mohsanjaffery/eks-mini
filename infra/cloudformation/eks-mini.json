{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Minimal EKS cluster with one ARM micro managed node and public subnets. Subnets are tagged for Kubernetes LoadBalancers.",
  "Parameters": {
    "ClusterName": {
      "Type": "String",
      "Default": "eks-mini-cluster",
      "AllowedPattern": "^[A-Za-z0-9\\-]+$",
      "Description": "EKS cluster name"
    },
    "KubernetesVersion": {
      "Type": "String",
      "Default": "1.30",
      "AllowedValues": [
        "1.28",
        "1.29",
        "1.30"
      ],
      "Description": "EKS control plane version"
    },
    "NodeInstanceType": {
      "Type": "String",
      "Default": "t4g.micro",
      "Description": "ARM64-compatible instance type (template pins AMI to AL2023_ARM_64_STANDARD)"
    },
    "DesiredSize": {
      "Type": "Number",
      "Default": 2,
      "MinValue": 1,
      "MaxValue": 10
    },
    "MinSize": {
      "Type": "Number",
      "Default": 1,
      "MinValue": 1,
      "MaxValue": 10
    },
    "MaxSize": {
      "Type": "Number",
      "Default": 2,
      "MinValue": 1,
      "MaxValue": 10
    },
    "NodeVolumeSizeGiB": {
      "Type": "Number",
      "Default": 20,
      "MinValue": 20,
      "MaxValue": 100,
      "Description": "Root volume size"
    },
    "PublicAccessCidrs": {
      "Type": "CommaDelimitedList",
      "Default": "0.0.0.0/0",
      "Description": "CIDRs allowed to reach the public EKS API endpoint"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ClusterName}-vpc"
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ClusterName}-igw"
            }
          }
        ]
      }
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ClusterName}-public-rt"
            }
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "CidrBlock": {
          "Fn::Select": [
            0,
            {
              "Fn::Cidr": [
                "10.0.0.0/16",
                2,
                8
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ClusterName}-public-a"
            }
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": {
              "Fn::Sub": "kubernetes.io/cluster/${ClusterName}"
            },
            "Value": "shared"
          }
        ]
      }
    },
    "PublicSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "CidrBlock": {
          "Fn::Select": [
            1,
            {
              "Fn::Cidr": [
                "10.0.0.0/16",
                2,
                8
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ClusterName}-public-b"
            }
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": {
              "Fn::Sub": "kubernetes.io/cluster/${ClusterName}"
            },
            "Value": "shared"
          }
        ]
      }
    },
    "SubnetARouteAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnetA"
        }
      }
    },
    "SubnetBRouteAssoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnetB"
        }
      }
    },
    "EKSServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "${ClusterName}-eks-cluster-role"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ClusterName}-eks-cluster-role"
            }
          }
        ]
      }
    },
    "NodeInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "${ClusterName}-eks-node-role"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${ClusterName}-eks-node-role"
            }
          }
        ]
      }
    },
    "EKSCluster": {
      "Type": "AWS::EKS::Cluster",
      "Properties": {
        "Name": {
          "Ref": "ClusterName"
        },
        "Version": {
          "Ref": "KubernetesVersion"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "EKSServiceRole",
            "Arn"
          ]
        },
        "ResourcesVpcConfig": {
          "SubnetIds": [
            {
              "Ref": "PublicSubnetA"
            },
            {
              "Ref": "PublicSubnetB"
            }
          ],
          "EndpointPublicAccess": true,
          "EndpointPrivateAccess": false,
          "PublicAccessCidrs": {
            "Ref": "PublicAccessCidrs"
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "ClusterName"
            }
          }
        ]
      }
    },
    "AddonVpcCni": {
      "Type": "AWS::EKS::Addon",
      "Properties": {
        "AddonName": "vpc-cni",
        "ClusterName": {
          "Ref": "EKSCluster"
        },
        "ResolveConflicts": "OVERWRITE"
      }
    },
    "AddonCoreDNS": {
      "Type": "AWS::EKS::Addon",
      "Properties": {
        "AddonName": "coredns",
        "ClusterName": {
          "Ref": "EKSCluster"
        },
        "ResolveConflicts": "OVERWRITE"
      }
    },
    "AddonKubeProxy": {
      "Type": "AWS::EKS::Addon",
      "Properties": {
        "AddonName": "kube-proxy",
        "ClusterName": {
          "Ref": "EKSCluster"
        },
        "ResolveConflicts": "OVERWRITE"
      }
    },
    "ManagedNodeGroup": {
      "Type": "AWS::EKS::Nodegroup",
      "Properties": {
        "ClusterName": {
          "Ref": "EKSCluster"
        },
        "NodegroupName": {
          "Fn::Sub": "${ClusterName}-ng"
        },
        "NodeRole": {
          "Fn::GetAtt": [
            "NodeInstanceRole",
            "Arn"
          ]
        },
        "Subnets": [
          {
            "Ref": "PublicSubnetA"
          },
          {
            "Ref": "PublicSubnetB"
          }
        ],
        "ScalingConfig": {
          "DesiredSize": {
            "Ref": "DesiredSize"
          },
          "MinSize": {
            "Ref": "MinSize"
          },
          "MaxSize": {
            "Ref": "MaxSize"
          }
        },
        "InstanceTypes": [
          {
            "Ref": "NodeInstanceType"
          }
        ],
        "AmiType": "AL2023_ARM_64_STANDARD",
        "DiskSize": {
          "Ref": "NodeVolumeSizeGiB"
        },
        "CapacityType": "ON_DEMAND",
        "Tags": {
          "Name": {
            "Fn::Sub": "${ClusterName}-ng"
          }
        }
      }
    }
  },
  "Outputs": {
    "ClusterNameOut": {
      "Value": {
        "Ref": "ClusterName"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-ClusterName"
        }
      }
    },
    "ClusterArn": {
      "Value": {
        "Fn::GetAtt": [
          "EKSCluster",
          "Arn"
        ]
      }
    },
    "ClusterEndpoint": {
      "Value": {
        "Fn::GetAtt": [
          "EKSCluster",
          "Endpoint"
        ]
      }
    },
    "ClusterVersion": {
      "Value": {
        "Ref": "KubernetesVersion"
      }
    },
    "VpcId": {
      "Value": {
        "Ref": "VPC"
      }
    },
    "PublicSubnetIds": {
      "Value": {
        "Fn::Join": [
          ",",
          [
            {
              "Ref": "PublicSubnetA"
            },
            {
              "Ref": "PublicSubnetB"
            }
          ]
        ]
      }
    },
    "NodeRoleArn": {
      "Value": {
        "Fn::GetAtt": [
          "NodeInstanceRole",
          "Arn"
        ]
      }
    },
    "NextSteps": {
      "Description": "Suggested post-deploy commands",
      "Value": "0) make kubeconfig\n               1) make app-apply\n               2) make lockdown\n               3) make app-wait\n               4) make app-open or make app-curl"
    }
  }
}
